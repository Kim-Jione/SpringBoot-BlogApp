<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.metacoding.firstapp.domain.post.PostDao">

	<select id="findById"
		resultType="site.metacoding.firstapp.domain.post.Post">
		SELECT * FROM post WHERE post_id=#{postId}
	</select>

	<select id="findAll"
		resultType="site.metacoding.firstapp.domain.post.Post">
		SELECT *
		FROM post 
	</select>

	<insert id="insert">
		INSERT
		INTO post(post_title,post_content, post_thumnail, user_id,role, updated_at, created_at)
		VALUES(#{postTitle}, #{postContent}, #{postThumnail}, #{userId}, #{role} ,now(), now())
	</insert>

    <update id="update">
          UPDATE post
		  SET post_title = #{postTitle},
		  post_content = #{postContent},
		  post_thumnail = #{postThumnail},
		  role = #{role}
		  WHERE post_id=#{postId}
    </update>

	<delete id="delete">
		DELETE FROM post WHERE post_id = #{postId}
	</delete>

	<select id="saveResult" resultType="site.metacoding.firstapp.web.dto.response.post.SaveRespDto">
    SELECT *
    FROM post
    WHERE user_id = #{userId}
    ORDER BY post_id desc
	FETCH NEXT 1 ROWS ONLY
    </select>
	
	<select id="updateResult" resultType="site.metacoding.firstapp.web.dto.response.post.UpdateRespDto">
    SELECT *
    FROM post
    WHERE user_id = #{userId}
    ORDER BY post_id desc
	FETCH NEXT 1 ROWS ONLY
    </select>

    <select id="deleteResult" resultType="site.metacoding.firstapp.web.dto.response.post.DeleteRespDto">
    	SELECT *
    	FROM post
    	WHERE post_id=#{postId}
    </select>

	<select id="findByDetail" resultType="site.metacoding.firstapp.web.dto.response.post.DetailRespDto">
		SELECT p.post_id, p.post_title, p.post_content, p.post_thumnail, p.role, p.user_id ownerUserId, p.created_at, u.username, u.nickname, u.profile_img
		FROM post p
		LEFT JOIN user u 
		ON p.user_id = u.user_id
		WHERE post_id=#{postId}
    </select>

 	<select id="findByUserIdAndPostId" resultType="site.metacoding.firstapp.web.dto.response.post.UpdateRespDto">
        SELECT p.user_id ownerUserId, p.post_title, p.role, p.post_content, p.post_thumnail
    	FROM post p
    	WHERE user_id = #{userId} and post_id = #{postId}
    </select>
	
	<select id="findMyPostList" resultType="site.metacoding.firstapp.web.dto.response.user.MyPostListDto">
        SELECT p.post_id, p.post_title, p.post_content, p.post_thumnail, p.user_id ownerUserId, p.role, p.updated_at
		FROM post p
		INNER JOIN user u 
		ON p.user_id=u.user_id
		WHERE p.user_id=#{toUserId}
		ORDER BY p.post_id DESC
    </select>

	 <select id="findDailyList" resultType="site.metacoding.firstapp.web.dto.response.post.DailyListDto">
        SELECT *
		FROM post p
		INNER JOIN user u
		ON p.user_id = u.user_id
		WHERE role='daily'
    </select>

	<select id="findBusinessList" resultType="site.metacoding.firstapp.web.dto.response.post.BusinessListDto">
        SELECT *
		FROM post p
		INNER JOIN user u
		ON p.user_id = u.user_id
		WHERE role='business'
    </select>

	<select id="findPostList" resultType="site.metacoding.firstapp.web.dto.response.post.ListRespDto">
        SELECT *
		FROM user u 
		LEFT JOIN post p
		ON u.user_id = p.user_id
		WHERE p.post_title LIKE '%${keyword}%' 
		ORDER BY p.post_id DESC
    </select>

		<select id="findByProfileInfo" resultType="site.metacoding.firstapp.web.dto.response.user.ProfileDto">
 		 SELECT if(s.subscribe_id is not null, true, false) isSubscribe, if(#{fromUserId}= #{toUserId}, true, false) isMy, u.username, u.email, u.nickname,u.profile_img, u.user_id
		FROM   user u
		LEFT JOIN (SELECT subscribe_id, from_user_id, to_user_id FROM subscribe WHERE from_user_id=#{fromUserId} AND to_user_id=#{toUserId}) s
		ON u.user_id = s.to_user_id
		WHERE u.user_id=#{toUserId}
    </select>

</mapper>